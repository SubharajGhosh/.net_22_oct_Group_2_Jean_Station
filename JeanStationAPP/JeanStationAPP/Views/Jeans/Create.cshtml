@model JeanStationAPP.Models.Jeans

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Jeans</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <div class="card shadow-lg">
                    <div class="card-body">
                        <h4 class="card-title text-center">Create New Jeans</h4>
                        <hr />

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!-- Jeans ID -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.JeansId, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.JeansId, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Jeans ID" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.JeansId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Brand ID -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.BrandId, new { htmlAttributes = new { @class = "form-control", placeholder = "Select Brand" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Type -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Jeans Type" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>

                        <!-- Color -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Color" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                        </div>

                        <!-- Size -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control", placeholder = "Select Size" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                        </div>

                        <!-- Stock -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Stock Quantity" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                        </div>

                        <!-- Price (int Input) -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Price" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>


                        <!-- Image URL -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Image URL" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group text-center">
                            <input type="submit" value="Create" class="btn btn-primary btn-lg" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="text-center mt-3">
    @Html.ActionLink("Back to List", "BrowseAllJeans1", new { @class = "btn btn-link" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}